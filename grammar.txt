<program> ::= <defn>* ;
<defn> ::= <stmt> | <fn_def> ;
<fn_def> ::= "fn" <ident> "(" (<ident> ("," <ident>)*)? ")" <block> ;
<stmt> ::= <comment>
         | "print" <expr> ";"
         | "if" "(" <expr> ")" <block> ["else" <block>]
         | "let" <ident> "=" <expr> ";"
         | <ident> "=" <expr> ";"
         | <expr> ";"
         ;
<block> ::= "{" <stmt>* "}" ;
<comment> ::= "/" "/" .* "\n" ;
<expr> ::= <ident> 
         | <int> 
         | <unary_expr> 
         | <binary_expr> 
         | '(' <expr> ')'
         | '"' [^"] '"'
         | <ident> '(' (<expr> (',' <expr>)*)? ')'
         ;
<ident> ::= \w(\w\d)+ ;
<int> ::= \d+ ;
<binary_expr> ::= <expr> <binary_op> <expr> ;
<binary_op> ::= "==" | "*" | "/" | "+" | "-" ;
<unary_expr> ::= <unary_op> <expr> ;
<unary_op> ::= "-" ;
